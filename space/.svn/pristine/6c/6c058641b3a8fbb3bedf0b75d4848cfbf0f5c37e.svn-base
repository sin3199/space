package com.bigdataB.space;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.bigdataB.space.dto.HostListDTO;
import com.bigdataB.space.dto.MemberDTO;
import com.bigdataB.space.dto.ReservedRoomDTO;
import com.bigdataB.space.dto.RoomListDTO;
import com.bigdataB.space.dto.SpaceTypeDTO;
import com.bigdataB.space.service.AdminMapper;


@Controller
public class AdminController {
	
	@Autowired
	private AdminMapper adminMapper;
	
	@RequestMapping(value="main.do")
	public String main() {
		return "main";
	}
	
	@RequestMapping(value= {"admin_main.do"})
	public String adminMain() {
		return "admin/admin_main";
	}
	
	@RequestMapping(value="/admin_insertCategory.do", method=RequestMethod.GET)
	public String admin_insertCategory() {
		return "admin/admin_insertCategory";
	}
	
	@RequestMapping("/admin_listCategory.do")
	public String admin_listCategory(HttpServletRequest req) {
		List<SpaceTypeDTO> list = adminMapper.listCate();
		req.setAttribute("listCate", list);
		return "admin/admin_listCategory";
	}
	@RequestMapping("/category_sort.do")
	public @ResponseBody List<SpaceTypeDTO> SpaceTypeSort(@RequestParam Map<String,String> map){
		if(map==null) {
			map.put("column", "cate_nm");
		}
		List<SpaceTypeDTO> list = adminMapper.sortCate(map);
		return list;
	}
	
	
	@RequestMapping("/admin_listGuest.do")
	public String admin_listGuest(HttpServletRequest req) {
		
		List<MemberDTO> list = adminMapper.listGuest();
		req.setAttribute("listGuest",list); 
				
		return "admin/admin_listGuest";
	}
	@RequestMapping("/guest_sort.do")
	public  @ResponseBody List<MemberDTO> guest_sort(@RequestParam Map<String,String> map) {
		if(map==null) {
			map.put("column", "member_nm");
			
		}
		List<MemberDTO> list = adminMapper.sortGuest(map);
		return list;
	}

	
	@RequestMapping("/admin_listHost.do")
	public String admin_listHost(HttpServletRequest req) {
		List<MemberDTO> list = adminMapper.listHost();
		req.setAttribute("listHost", list);
		return "admin/admin_listHost";
	}
	@RequestMapping("/host_sort.do")
	public  @ResponseBody List<HostListDTO> host_sort(@RequestParam Map<String,String> map) {
		if(map==null) {
			map.put("column", "member_nm");		
		}
		List<HostListDTO> list = adminMapper.sortHost(map);
		return list;
	}
	
	
	@RequestMapping(value="/admin_insertCategory.do", method=RequestMethod.POST)
	public String cate_insert(HttpServletRequest req, @ModelAttribute SpaceTypeDTO dto, BindingResult result) {
		
		if (result.hasErrors()) {
			dto.setCate_img("");
		}
		 
		MultipartHttpServletRequest mr = (MultipartHttpServletRequest)req;
		MultipartFile file = mr.getFile("cate_img");
		HttpSession session = req.getSession();
		
		String upPath = session.getServletContext().getRealPath("/resources/img/cateIcon");
		
		File target = new File(upPath, file.getOriginalFilename());
		
		dto.setCate_img(file.getOriginalFilename());
		
		try {
			file.transferTo(target);
		}catch(IOException e) {
			e.printStackTrace();
		}
		
		
		
		int res = adminMapper.insertCate(dto);
		if(res>0) {
			req.setAttribute("msg", "카테고리 등록 성공!");
			req.setAttribute("url", "admin_listCategory.do");
		} else {
			req.setAttribute("msg", "카테고리 등록 실패!!");
			req.setAttribute("url", "admin_insertCategory.do");
		}
		return "message";
	}
	
	@RequestMapping("/admin_listRoom.do")
	public String admin_listRoom(HttpServletRequest req) {
		List<RoomListDTO> list = adminMapper.listRoom();
		req.setAttribute("listSpaceRoom", list);
		return "admin/admin_listRoom";
	}
	
	@RequestMapping("/roomList_sort.do")
	public String roomList_sort(@RequestParam Map<String,String> map,Model model){
		if(map==null) {
			map.put("column","member_nm");
		}
		List<RoomListDTO> list = adminMapper.sortRoomList(map);
		model.addAttribute("listSpaceRoom", list);
		System.out.println(list);
		return "admin/admin_listRoomAjax";
	}
	
	
	 
	 @RequestMapping("/admin_listReserve.do")
	 public String admin_listReserve(HttpServletRequest req) {
		 List<ReservedRoomDTO> list = adminMapper.listReserve();
		 
		 
		 req.setAttribute("listReserve", list);
		 return "admin/admin_listReserve";
	 }
	 
	 
	
	 

}

