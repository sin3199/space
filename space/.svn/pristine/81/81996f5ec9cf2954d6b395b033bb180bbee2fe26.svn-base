package com.bigdataB.space;

import java.io.File;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.bigdataB.space.dto.SpaceDTO;
import com.bigdataB.space.dto.SpaceRoomDTO;
import com.bigdataB.space.service.HostBuildingMapper;

/*
 * 호스트홈, 건물등록, 건물관리, 예약리스트, 건물수정 에 관한 내용입니다.
 * -이재혁-
 */
@Controller
public class HostController {

	@Autowired
	private HostBuildingMapper hostBuildingMapper;

	@GetMapping("/host_home.do")
	public String host_home() {
		return "host/host_home";
	}

	@GetMapping("/host_guestList.do")
	public String host_guestList() {
		return "host/host_guestList";
	}

	@GetMapping("/host_buildingAdd.do")
	public String host_buildingAdd() {
		return "host/host_buildingAdd";
	}

	@PostMapping("/host_buildingAdd.do")
	public String host_buildingAddPro(HttpServletRequest req, @ModelAttribute SpaceDTO sdto) {
		System.out.println("함수 실행");
		int res = hostBuildingMapper.insertHostBuilding(sdto);
		if (res > 0) {
			req.setAttribute("msg", "건물등록성공 리스트페이지로 이동합니다.");
			req.setAttribute("url", "host_buildingList.do");
		} else {
			req.setAttribute("msg", "건물등록성공! 리스트페이지로 이동합니다.");
			req.setAttribute("url", "host_buildingList.do");
		}
		return "/message";
	}

	@GetMapping("/host_buildingFix.do")
	public String host_buildingFix() {
		return "host/host_buildingFix";
	}

//	@GetMapping("/host_buildingList.do")
//	public String host_buildingList() {
//		return "host/host_buildingList";
//	}

	@RequestMapping(value = "/host_buildingList.do")
	public String listHostBuilding(HttpServletRequest req, @RequestParam(required = false) String pageNum) {
		if (pageNum == null) {
			pageNum = "1";
		}
		
		int currentPage = Integer.parseInt(pageNum);
		int pageSize = 5; // page number?
		int startRow = (currentPage - 1) * pageSize + 1;
		int endRow = startRow + pageSize - 1;
		int countRow = hostBuildingMapper.getHostBuildingCount();
		
		if (endRow > countRow) {
			endRow = countRow;
		}

		List<SpaceDTO> srlist = hostBuildingMapper.listHostBuilding(startRow, endRow);
		int room_no = countRow - (startRow - 1);
		req.setAttribute("listHostBuilding", srlist);
		req.setAttribute("space_no", room_no);
		int pageCount = countRow / pageSize + (countRow % pageSize == 0 ? 0 : 1);
		int pageBlock = 3;
		int startPage = (currentPage - 1) / pageBlock * pageBlock + 1;
		int endPage = startPage + pageBlock - 1;
		
		if (endPage > pageCount) {
			endPage = pageCount;
		}

		req.setAttribute("pageCount", pageCount);
		req.setAttribute("pageBlock", pageBlock);
		req.setAttribute("startPage", startPage);
		req.setAttribute("endPage", endPage);
		
		return "host/host_buildingList";
	}
	
	@RequestMapping("/host_buildingDelete.do")
	public String deleteRoom(HttpServletRequest req, @ModelAttribute SpaceDTO sdto) {
		int res = hostBuildingMapper.deleteHostBuilding(sdto.getSpace_no());
		if (res > 0) {
			req.setAttribute("msg", "삭제 스응공!! 건물 목록 페이지로 이동합니다.");
			req.setAttribute("url", "host_buildingList.do");
		} else {
			req.setAttribute("msg", "삭제 시일패!! 건물 목록 페이지로 이동합니다.");
			req.setAttribute("url", "host_buildingList.do");
		}
		
		return "/message";
	}

}
